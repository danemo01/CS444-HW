Script started on Wed 16 Dec 2020 05:31:06 PM EST
tuser@tutor-vserver:~/cs444$ mtip
Usage: mtip [-b board#] [-f download-file]
specify board by #: -b 1, etc.; defaults to scan.
more flags: [-x debuglevel] -e <escchar>
  Use ~ or Esc for mtip commands such as ~q or <Esc>q to quitfor more info on commands, type ~? or Esc? once program is running
now scanning for free board...
Using board # 1 

Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> mdd 52000

00052000    00000007 00001007 00002007 00003007 ......... ...0..

*******************************************
Q1.

After dumping I've notice that the the PTE's showcase that the pages are cleaned. After converting
the values of each PTE's. I can see that each's V,W,U bits are 1 (or 7 in this case). 
Meaning that the first 4 PTE's are clean.

PTE0= {vpn 0, hasn't been touched}

********************************************

Tutor> mdd 5210  138

00052138    0004e007 0004f007 00050027 00051007 ........'.......
Tutor> 

00052148    00052027 00053007 00054007 00055067 ' ...0...@..gP..

**********************************************
Q2. 

PD->PTE[pfn] = (pfn)000 - (pfn)fff

Since we were able to obtain the first PTE, pfn being 0. We were able to find the PTE 
that represented VA 50000, by understanding that one page represents 1024 memory location and
we have verified (we can figure this out later) that the PA and VA are identical.

Then after understanding that PFN = X is 0xX000-0xXfff then we've learned that the start of
the tutor program is at 0x52140

Q2B

The ones that hasn't been touched is PTE 51, 53 and below PTE 50 is PTE 4f and PTE 4e
*************************************************

Tutor> mdd 52000

00052000    00000007 00001007 00002007 00003007 ......... ...0..
Tutor> md 3007       mdd 3007 2

00003002    00000000 53300000 8e000020 53340000 ......0S .....4S
Tutor> mdd 52000

00052000    00000007 00001007 00002007 00003027 ......... ..'0..
Tutor> mdd    s 3002 hi

Tutor> mdd 3002

00003002    00000006 53300000 8e000020 53340000 ......0S .....4S
Tutor> m mdd 52000

00052000    00000007 00001007 00002007 00003067 ......... ..g0..

****************************************
Q3.

We looked at the PTE's 3 flags and was shown that it has been accessed, after using md 3007
and checking the PTE again, we see that the access bit has been set to 1. Then after doing
ms 3007 hi we then check the PTE again and see that the dirty bit has been set to 1.

(actions that occur)
mdd 3002    | PTE has now been access and touched
mdd 52000   | evaluate that
ms  3002 hi | Now PTE is dirty and has some memory
mdd 52000   | Evaluate it from that PTE[3] has been access and is dirty
****************************************************

Tutor> ms 5200c 3006

Tutor> mdd 52000

00052000    00000007 00001007 00002007 00003006 ......... ...0..
Tutor> mdd 3000
00003000    Exception 14 at EIP=00060d9e: Page fault

************************************************
Q4. 

(actions that occur)
ms 5200c 3006   | access bit is now 0 and cannot be accessed from MMU 
md 52000 | eval that PTE[3] access bit is 0
mdd 3000 | access memory address from PTE[3]000 - PTE[3]fff

As you can see we obtain a page fault, and I believe the Question is misleading.
The caching is not implemented due to the pagefault occuring.

If TLB was there, we would've been able to still access PTE[3]'s VA space due to
the fact that TLB hasn't been updated? or does it reverify if any changes has happen
to the PTE? 
************************************************

Tutor> rd all
EAX=00003000 EBX=00000000   EBP=0006f510
EDX=00000000 ECX=00060d98   ESP=0006f510
ESI=0006f540 EDI=0006f53c   EIP=00060d9e
EFLAGS=10206 (IF=1 SF=0 ZF=0 CF=0 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> rd    rs CR3 51000

Tutor> md all

0000000a    14 00 53 ff 00 f0 53 ff 00 f0 54 ff 00 f0 88 84 ..S...S...T.....
Tutor> mdd     rd all

EAX=00003000 EBX=00000000   EBP=0006f510
EDX=00000000 ECX=00060d98   ESP=0006f510
ESI=0006f540 EDI=0006f53c   EIP=00060d9e
EFLAGS=10206 (IF=1 SF=0 ZF=0 CF=0 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> mdd 52000         ms 52000c 50007  7

Exception 14 at EIP=00061056: Page fault

************
Q5. 

actions need
rd all | check regs
rs CR3 51000 | Does nothing because there's no TLB?
rd all | regs are the same.

After learning that Q4 doesn't have the TLB to verify this bug (TLB caching when we simply manipulate a PTE)
Defintely 'rs CR3 51000' does nothing at all... no TLB there for way of flusing it.
******

Tutor> ms 5200c 2 40  5007

Tutor> mdd   mdd 3200

00003200    00000000 00000000 00000000 00000000 ................
Tutor> ms 5 3200 cool

Tutor> ms 3200 00000000

Tutor> ms 3100   231 cool

Tutor> mdd 3231    3   d 3231

00003231    0000000c 00000000 00000000 00000000 ................
Tutor> mdd    3231

00003231    0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
Tutor> md 32311     5231

00005231    0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
Tutor> ms 3231 1234

Tutor> md 3231

00003231    34 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4...............
Tutor> md  ms d 3 5231

00005231    34 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4...............

********************

Q6. 
ms 5200c 5007 | we technically copy the content for PTE
ms 3231 cool | we randomly put something in
md 3231 | we read that VA
md 5231 | we read another VA, similar contents
ms 3231 1234 | we write in VA 3000 but now it's going to be sent to PA 5000
md 3231 | the content I wrote
md 5231 | also here as well seems that PTE[3] and PTE[5 has the same space 


I was able to use MS to copy the PET from PET[3] to PET[5], by doing read and write from 
the VA 0x3000-0x3fff the MMU will now assume that VA is referring to PA 0x5000-0x5fff
*******************

Tutor> ms 52 1c00 0000000

Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> 

***********

Q7  

ms 51c00 00000000


I decided set ms 51c00 000000000, and the VMware gave me an error and then
proceeding to restart tutor again. Though I'm not sure why as to why that happens.
I originally assumed that mtip would just cause and error, but I suggest that the
tutor program gets rerun in a loop once if the tutor program crashes.
*************

Tutor> 
Quit handler: 
killing process 2018 Leaving board #1
tuser@tutor-vserver:~/cs444$ exit
exit

Script done on Wed 16 Dec 2020 06:31:07 PM EST
