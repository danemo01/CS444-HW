Script started on Sun 11 Oct 2020 09:57:19 PM EDT
]0;tuser@tutor-vserver: ~/cs444/hw1tuser@tutor-vserver:~/cs444/hw1$ ssh dotadan@users.cs.umb.edu
dotadan@users.cs.umb.edu's password: 
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-190-generic x86_64)

17 packages can be updated.
5 updates are security updates.


6 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

Authorized users only.

Contact: operator@cs.umb.edu or 617-287-6480

Last login: Sun Oct 11 21:54:57 2020 from 73.114.217.63
dotadan@itserver6:~$ cs [K[Kd cs444/hw1_part2/hw1
dotadan@itserver6:~/cs444/hw1_part2/hw1$ make clean
rm -f *.o
dotadan@itserver6:~/cs444/hw1_part2/hw1$ ls -al
total 132
drwxrwsr-x 3 dotadan cs444-1G  4096 Oct 11 21:57 .
drwxrwsr-x 5 dotadan cs444-1G  4096 Oct 11 21:46 ..
-rw-r--r-- 1 dotadan cs444-1G  1506 Oct 11 18:24 io.c
-rw-r--r-- 1 dotadan cs444-1G   411 Oct 11 18:24 ioconf.c
-rw-r--r-- 1 dotadan cs444-1G   815 Oct 11 18:24 ioconf.h
-rw-r--r-- 1 dotadan cs444-1G   566 Oct 11 18:24 io_public.h
-rw-r--r-- 1 dotadan cs444-1G  2103 Oct 11 18:24 makefile
-rw-r--r-- 1 dotadan cs444-1G   139 Oct 11 18:24 my README
drwxrwsr-x 2 dotadan cs444-1G  4096 Oct 11 20:10 queue
-rw-r--r-- 1 dotadan cs444-1G   738 Oct 11 18:24 README
-rw-r--r-- 1 dotadan cs444-1G  4210 Oct 11 18:24 remgbd-testio_mod-jeffrey.script
-rw-r--r-- 1 dotadan cs444-1G  3782 Oct 11 18:24 remgdb-testio_mod.script
lrwxrwxrwx 1 dotadan cs444-1G    11 Oct 11 21:55 syms -> testio.syms
-rw-r--r-- 1 dotadan cs444-1G  3170 Oct 11 18:24 testio.c
-rwxr-xr-x 1 dotadan cs444-1G 32132 Oct 11 21:55 testio.lnx
-rw-r--r-- 1 dotadan cs444-1G  2735 Oct 11 18:24 testio_mod-jeffrey.script
-rw-r--r-- 1 dotadan cs444-1G  2325 Oct 11 18:24 testio_mod-orig.script
-rw-r--r-- 1 dotadan cs444-1G  1794 Oct 11 21:55 testio.syms
-rw-r--r-- 1 dotadan cs444-1G  7436 Oct 11 21:45 tty.c
-rw-r--r-- 1 dotadan cs444-1G  1091 Oct 11 18:24 tty.h
-rw-r--r-- 1 dotadan cs444-1G  7612 Oct 11 19:41 tty_old.c
-rw-r--r-- 1 dotadan cs444-1G   415 Oct 11 18:24 tty_public.h
-rw-r--r-- 1 dotadan cs444-1G  7716 Oct 11 21:41 tty_safe.c
dotadan@itserver6:~/cs444/hw1_part2/hw1$ cat t[Ktty.c
/*********************************************************************
*
*       file:           tty.c
*       author:         betty o'neil
*
*       tty driver--device-specific routines for ttys 
*
*/
#include <stdio.h>  /* for kprintf prototype */
#include <serial.h>
#include <cpu.h>
#include <pic.h>
#include "ioconf.h"
#include "tty_public.h"
#include "tty.h"
#include "queue/queue.h"

struct tty ttytab[NTTYS];        /* software params/data for each SLU dev */

/* Record debug info in otherwise free memory between program and stack */
/* 0x300000 = 3M, the start of the last M of user memory on the SAPC */
#define DEBUG_AREA 0x300000
#define BUFLEN 20

char *debug_log_area = (char *)DEBUG_AREA;
char *debug_record;  /* current pointer into log area */ 

/* tell C about the assembler shell routines */
extern void irq3inthand(void), irq4inthand(void);

/* C part of interrupt handlers--specific names called by the assembler code */
extern void irq3inthandc(void), irq4inthandc(void); 

/* the common code for the two interrupt handlers */                           static void irqinthandc(int dev);

/* prototype for debug_log */ 
void debug_log(char *);

/*====================================================================
*
*       tty specific initialization routine for COM devices
*
*/

Queue qin, qout, echoq; 

void ttyinit(int dev)
{
  int baseport;
  struct tty *tty;		/* ptr to tty software params/data block */
  init_queue(&qin, MAXBUF); 
  init_queue(&qout, MAXBUF); 
  init_queue(&echoq, MAXBUF);

  debug_record = debug_log_area; /* clear debug log */
  baseport = devtab[dev].dvbaseport; /* pick up hardware addr */
  tty = (struct tty *)devtab[dev].dvdata; /* and software params struct */

  if (baseport == COM1_BASE) {
      /* arm interrupts by installing int vec */
      set_intr_gate(COM1_IRQ+IRQ_TO_INT_N_SHIFT, &irq4inthand);
      pic_enable_irq(COM1_IRQ);
  } else if (baseport == COM2_BASE) {
      /* arm interrupts by installing int vec */
      set_intr_gate(COM2_IRQ+IRQ_TO_INT_N_SHIFT, &irq3inthand);
      pic_enable_irq(COM2_IRQ);
  } else {
      kprintf("Bad TTY device table entry, dev %d\n", dev);
      return;			/* give up */
  }
  tty->echoflag = 1;		/* default to echoing */
  tty->rin = 0;               /* initialize indices */
  tty->rout = 0;
  tty->rnum = 0;              /* initialize counter */
  tty->tin = 0;               /* initialize indices */
  tty->tout = 0;
  tty->tnum = 0;              /* initialize counter */

  /* enable interrupts on receiver */
  outpt(baseport+UART_IER, UART_IER_RDI); /* RDI = receiver data int */
}


/*====================================================================
*
*       Useful function when emptying/filling the read/write buffers
*
*/

#define min(x,y) (x < y ? x : y)


/*====================================================================
*
*       tty-specific read routine for TTY devices
*
*/

int ttyread(int dev, char *buf, int nchar)
{

  int i;
  char ch;

  char log[BUFLEN];
  int saved_eflags;        /* old cpu control/status reg, so can restore it */

  saved_eflags = get_eflags();
  i = 0; // set index 

  while(i < nchar) {
    cli();
    if (!emptyqueue(&qin)) {
      ch = dequeue(&qin);
      buf[i] = ch;
      sprintf(log, ">%c", buf[i]);
      debug_log(log);
      i++;
    }
    set_eflags(saved_eflags);
  }
  return nchar;

/*
  copychars = min(nchar, tty->rnum);      // chars to copy from buffer 
  for (i = 0; i < copychars; i++) {
    saved_eflags = get_eflags();
    cli();			 disable ints in CPU 
    if((&))
    buf[i] = tty->rbuf[tty->rout++];      // copy from ibuf to user buf 
   sprintf(log, ">%c", buf[i]);
   debug_log(log);
   tty->rnum--;                          // decrement count 
    if (tty->rout >= MAXBUF) tty->rout = 0;
    set_eflags(saved_eflags);     // back to previous CPU int. status 
  }
  */

  //return copychars;       /* but should wait for rest of nchar chars if nec. */
  /* this is something for you to correct */
}


/*====================================================================
*
*       tty-specific write routine for SAPC devices
*       (cs444: note that the buffer tbuf is superfluous in this code, but
*        it still gives you a hint as to what needs to be done for
*        the interrupt-driven case)
*
*/

int ttywrite(int dev, char *buf, int nchar)
{
  int baseport;
  int i;
  char log[BUFLEN];

  baseport = devtab[dev].dvbaseport; /* hardware addr from devtab */

   i = 0; // set index 

  
   while(i < nchar){
    cli();
    if (queuecount(&qout) < MAXBUF) {//enqueue(&qout, buf[i]) != FULLQUE) {
        outpt(baseport+UART_IER, UART_IER_RDI | UART_IER_THRI);
        // enable register  // reciever data | modem interrrup
        enqueue(&qout, buf[i]);
        sprintf(log,"<%c", buf[i]);
	debug_log(log);
        i++;
    }
      //set_eflags(saved_eflags);
    sti();
  }
  return nchar;




/*
  for (i = 0; i < nchar; i++) {
    sprintf(log,"<%c", buf[i]); // record input char-- 
    debug_log(log);
    tty->tbuf[tty->tin++] = buf[i];
    tty->tnum++;
    if (tty->tin >= MAXBUF) tty->tin = 0;
    putc(dev+1, buf[i]);	// use lib for now--replace this! //
  }
  return nchar;
  */
}

/*====================================================================
*
*       tty-specific control routine for TTY devices
*
*/

int ttycontrol(int dev, int fncode, int val)
{
  struct tty *this_tty = (struct tty *)(devtab[dev].dvdata);

  if (fncode == ECHOCONTROL)
    this_tty->echoflag = val;
  else return -1;
  return 0;
}



/*====================================================================
*
*       tty-specific interrupt routine for COM ports
*
*   Since interrupt handlers don't have parameters, we have two different
*   handlers.  However, all the common code has been placed in a helper 
*   function.
*/
  
void irq4inthandc()
{
  irqinthandc(TTY0);
}                              
  
void irq3inthandc()
{
  irqinthandc(TTY1);
}                              

void irqinthandc(int dev){  
  int ch;
  struct tty *tty = (struct tty *)(devtab[dev].dvdata);
  int baseport = devtab[dev].dvbaseport; /* hardware i/o port */;

  int iir;

  pic_end_int();                /* notify PIC that its part is done */
  debug_log("*");

  pic_end_int();  	/*notify pic that its part is done */ 
  iir = inpt(baseport+UART_IIR);
  int id = iir & UART_IIR_ID;
  if (id == UART_IIR_RDI) {		/* handling recieve interrupt */
    ch = inpt(baseport+UART_RX);	/* read char, ask the device */
    enqueue(&qin, ch);
    if (tty->echoflag)
      outpt(baseport+UART_TX, ch);
  } 
  if (id == UART_IIR_THRI) {	/* handling transmit interrupt */
    if (queuecount(&qout)) {
     ch = dequeue(&qout);
     outpt(baseport + UART_TX, ch);
    }  
  }
  outpt(baseport+UART_IER, UART_IER_RDI);
}


/*
  ch = inpt(baseport+UART_RX);	// read char, ack the device 
  if (tty->rnum < MAXBUF) {   // if space left in ring buffer 
    tty->rnum++;                 // increase character count 
    tty->rbuf[tty->rin++] = ch; // put char in ibuf, step ptr 
    if (tty->rin >= MAXBUF)     // check if we need to wrap-around 
      tty->rin = 0;              // and reset as appropriate 
  }
  if (tty->echoflag)             // if echoing wanted 
    outpt(baseport+UART_TX,ch);   // echo char: see note above 
}

*/



/* append msg to memory log */
void debug_log(char *msg)
{
    strcpy(debug_record, msg);
    debug_record +=strlen(msg);
}

dotadan@itserver6:~/cs444/hw1_part2/hw1$ make
gcc -DSAPC -gdwarf-2 -gstrict-dwarf -march=i586 -m32 -fno-builtin -fno-stack-protector -nostdlib     -c -Wall -I/home/cheungr/serl/tutor-linux/include -c -o testio.o testio.c
gcc -DSAPC -gdwarf-2 -gstrict-dwarf -march=i586 -m32 -fno-builtin -fno-stack-protector -nostdlib     -c -Wall -I/home/cheungr/serl/tutor-linux/include -c -o io.o io.c
gcc -DSAPC -gdwarf-2 -gstrict-dwarf -march=i586 -m32 -fno-builtin -fno-stack-protector -nostdlib     -c -Wall -I/home/cheungr/serl/tutor-linux/include -c -o tty.o tty.c
gcc -DSAPC -gdwarf-2 -gstrict-dwarf -march=i586 -m32 -fno-builtin -fno-stack-protector -nostdlib     -c -Wall -I/home/cheungr/serl/tutor-linux/include -c -o ioconf.o ioconf.c
gcc -DSAPC -gdwarf-2 -gstrict-dwarf -march=i586 -m32 -fno-builtin -fno-stack-protector -nostdlib     -c -Wall -I/home/cheungr/serl/tutor-linux/include -c -o queue.o queue/queue.c
ld -m elf_i386 -N -Ttext 100100 -o testio.lnx \
/home/cheungr/serl/tutor-linux/libc/startup0.o /home/cheungr/serl/tutor-linux/libc/startup.o \
  testio.o io.o tty.o ioconf.o queue.o  /home/cheungr/serl/tutor-linux/libc/libc.a
rm -f syms;nm -n testio.lnx>testio.syms;ln -s testio.syms syms
dotadan@itserver6:~/cs444/hw1_part2/hw1$ exit
logout
Connection to users.cs.umb.edu closed.
]0;tuser@tutor-vserver: ~/cs444/hw1tuser@tutor-vserver:~/cs444/hw1$ scp dotadan@users.cs.umb.edu:/[Kcs444/hw1_part2/hw1/* .
dotadan@users.cs.umb.edu's password: 
io.c                                                                                                        0%    0     0.0KB/s   --:-- ETAio.c                                                                                                      100% 1506     1.5KB/s   00:00    
ioconf.c                                                                                                    0%    0     0.0KB/s   --:-- ETAioconf.c                                                                                                  100%  411     0.4KB/s   00:00    
ioconf.h                                                                                                    0%    0     0.0KB/s   --:-- ETAioconf.h                                                                                                  100%  815     0.8KB/s   00:00    
ioconf.o                                                                                                    0%    0     0.0KB/s   --:-- ETAioconf.o                                                                                                  100% 2652     2.6KB/s   00:00    
io.o                                                                                                        0%    0     0.0KB/s   --:-- ETAio.o                                                                                                      100% 3704     3.6KB/s   00:00    
io_public.h                                                                                                 0%    0     0.0KB/s   --:-- ETAio_public.h                                                                                               100%  566     0.6KB/s   00:00    
makefile                                                                                                    0%    0     0.0KB/s   --:-- ETAmakefile                                                                                                  100% 2103     2.1KB/s   00:00    
my README                                                                                                   0%    0     0.0KB/s   --:-- ETAmy README                                                                                                 100%  139     0.1KB/s   00:00    
scp: cs444/hw1_part2/hw1/queue: not a regular file
queue.o                                                                                                     0%    0     0.0KB/s   --:-- ETAqueue.o                                                                                                   100% 4488     4.4KB/s   00:00    
README                                                                                                      0%    0     0.0KB/s   --:-- ETAREADME                                                                                                    100%  738     0.7KB/s   00:00    
remgbd-testio_mod-jeffrey.script                                                                            0%    0     0.0KB/s   --:-- ETAremgbd-testio_mod-jeffrey.script                                                                          100% 4210     4.1KB/s   00:00    
remgdb-testio_mod.script                                                                                    0%    0     0.0KB/s   --:-- ETAremgdb-testio_mod.script                                                                                  100% 3782     3.7KB/s   00:00    
syms                                                                                                        0%    0     0.0KB/s   --:-- ETAsyms                                                                                                      100% 1794     1.8KB/s   00:00    
testio.c                                                                                                    0%    0     0.0KB/s   --:-- ETAtestio.c                                                                                                  100% 3170     3.1KB/s   00:00    
testio.lnx                                                                                                  0%    0     0.0KB/s   --:-- ETAtestio.lnx                                                                                                100%   31KB  31.4KB/s   00:00    
testio_mod-jeffrey.script                                                                                   0%    0     0.0KB/s   --:-- ETAtestio_mod-jeffrey.script                                                                                 100% 2735     2.7KB/s   00:00    
testio_mod-orig.script                                                                                      0%    0     0.0KB/s   --:-- ETAtestio_mod-orig.script                                                                                    100% 2325     2.3KB/s   00:00    
testio.o                                                                                                    0%    0     0.0KB/s   --:-- ETAtestio.o                                                                                                  100% 6700     6.5KB/s   00:00    
testio.syms                                                                                                 0%    0     0.0KB/s   --:-- ETAtestio.syms                                                                                               100% 1794     1.8KB/s   00:00    
tty.c                                                                                                       0%    0     0.0KB/s   --:-- ETAtty.c                                                                                                     100% 7436     7.3KB/s   00:00    
tty.h                                                                                                       0%    0     0.0KB/s   --:-- ETAtty.h                                                                                                     100% 1091     1.1KB/s   00:00    
tty.o                                                                                                       0%    0     0.0KB/s   --:-- ETAtty.o                                                                                                     100% 8144     8.0KB/s   00:00    
tty_old.c                                                                                                   0%    0     0.0KB/s   --:-- ETAtty_old.c                                                                                                 100% 7612     7.4KB/s   00:00    
tty_public.h                                                                                                0%    0     0.0KB/s   --:-- ETAtty_public.h                                                                                              100%  415     0.4KB/s   00:00    
tty_safe.c                                                                                                  0%    0     0.0KB/s   --:-- ETAtty_safe.c                                                                                                100% 7716     7.5KB/s   00:00    
]0;tuser@tutor-vserver: ~/cs444/hw1tuser@tutor-vserver:~/cs444/hw1$ mtip -f tty.[K[K[K[Ktestio.lnx 
For command help, type ~?
For help on args, rerun without args
Code starts at 0x100100
Using board # 1 
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> ~Downloading testio.lnx

..........Done.

Download done, setting EIP to 100100.
Tutor> go 1000 100
Running with device TTY1

Trying simple write(4 chars)...
hi!
write of 4 returned 4
<doing delay>
Trying longer write (9 chars)
abcdefghiwrite of 9 returned 9
<doing delay>

Trying write of 80-char string...
AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]]^^__``aabbccddeeffgghh
write returned 80
<doing delay>

Type 10 chars input to test typeahead while looping for delay...
<doing delay>
0123456789
Got 10 chars into buf. Trying write of buf...
0123456789
Trying another 10 chars read right away...
0123456789
Got 10 chars on second read
0123456789

Now turning echo off--

Type 20 chars input, note lack of echoes...
<doing delay>

Trying write of buf...
01234567890123456789
Asked for 20 characters; got 20
Exception 3 at EIP=00100110: Breakpoint
Tutor> md 300000
00300000    3c 68 2a 3c 69 2a 3c 21 2a 3c 0a 2a 3c 61 2a 3c <h*<i*<!*<.*<a*<
Tutor> 
00300010    62 2a 3c 63 2a 3c 64 2a 3c 65 2a 3c 66 2a 3c 67 b*<c*<d*<e*<f*<g
Tutor> 
00300020    2a 3c 68 2a 3c 69 2a 3c 41 2a 3c 41 2a 3c 42 2a *<h*<i*<A*<A*<B*
Tutor> 
00300030    3c 42 2a 3c 43 2a 3c 43 2a 3c 44 2a 3c 44 2a 3c <B*<C*<C*<D*<D*<
Tutor> 
00300040    45 2a 3c 45 2a 3c 46 2a 3c 46 2a 3c 47 2a 3c 47 E*<E*<F*<F*<G*<G
Tutor> 
00300050    2a 3c 48 2a 3c 48 2a 3c 49 2a 3c 49 2a 3c 4a 2a *<H*<H*<I*<I*<J*
Tutor> 
00300060    3c 4a 2a 3c 4b 2a 3c 4b 2a 3c 4c 2a 3c 4c 2a 3c <J*<K*<K*<L*<L*<
Tutor> 
00300070    4d 2a 3c 4d 2a 3c 4e 2a 3c 4e 2a 3c 4f 2a 3c 4f M*<M*<N*<N*<O*<O
Tutor> 
00300080    2a 3c 50 2a 3c 50 2a 3c 51 2a 3c 51 2a 3c 52 2a *<P*<P*<Q*<Q*<R*
Tutor> 
00300090    3c 52 2a 3c 53 2a 3c 53 2a 3c 54 2a 3c 54 2a 3c <R*<S*<S*<T*<T*<
Tutor> 
003000a0    55 2a 3c 55 2a 3c 56 2a 3c 56 2a 3c 57 2a 3c 57 U*<U*<V*<V*<W*<W
Tutor> 
003000b0    2a 3c 58 2a 3c 58 2a 3c 59 2a 3c 59 2a 3c 5a 2a *<X*<X*<Y*<Y*<Z*
Tutor> 
003000c0    3c 5a 2a 3c 5b 2a 3c 5b 2a 3c 5c 2a 3c 5c 2a 3c <Z*<[*<[*<\*<\*<
Tutor> 
003000d0    5d 2a 3c 5d 2a 3c 5e 2a 3c 5e 2a 3c 5f 2a 3c 5f ]*<]*<^*<^*<_*<_
Tutor> 
003000e0    2a 3c 60 2a 3c 60 2a 3c 61 2a 3c 61 2a 3c 62 2a *<`*<`*<a*<a*<b*
Tutor> 
003000f0    3c 62 2a 3c 63 2a 3c 63 2a 3c 64 2a 3c 64 2a 3c <b*<c*<c*<d*<d*<
Tutor> 
00300100    65 2a 3c 65 2a 3c 66 2a 3c 66 2a 3c 67 2a 3c 67 e*<e*<f*<f*<g*<g
Tutor> 
00300110    2a 3c 68 2a 3c 68 2a 2a 3e 30 2a 3e 31 2a 3e 32 *<h*<h**>0*>1*>2
Tutor> 
00300120    2a 3e 33 2a 3e 34 2a 3e 35 2a 3e 36 2a 3e 37 2a *>3*>4*>5*>6*>7*
Tutor> 
00300130    3e 38 2a 3e 39 3c 30 2a 3c 31 2a 3c 32 2a 3c 33 >8*>9<0*<1*<2*<3
Tutor> 
00300140    2a 3c 34 2a 3c 35 2a 3c 36 2a 3c 37 2a 3c 38 2a *<4*<5*<6*<7*<8*
Tutor> 
00300150    3c 39 2a 2a 3e 30 2a 3e 31 2a 3e 32 2a 3e 33 2a <9**>0*>1*>2*>3*
Tutor> 
00300160    3e 34 2a 3e 35 2a 3e 36 2a 3e 37 2a 3e 38 2a 3e >4*>5*>6*>7*>8*>
Tutor> 
00300170    39 3c 30 2a 3c 31 2a 3c 32 2a 3c 33 2a 3c 34 2a 9<0*<1*<2*<3*<4*
Tutor> 
00300180    3c 35 2a 3c 36 2a 3c 37 2a 3c 38 2a 3c 39 2a 2a <5*<6*<7*<8*<9**
Tutor> 
00300190    2a 2a 3e 30 3e 31 3e 32 2a 3e 33 2a 3e 34 2a 3e **>0>1>2*>3*>4*>
Tutor> 
003001a0    35 2a 3e 36 2a 3e 37 2a 3e 38 2a 3e 39 2a 3e 30 5*>6*>7*>8*>9*>0
Tutor> 
003001b0    2a 3e 31 2a 3e 32 2a 3e 33 2a 3e 34 2a 3e 35 2a *>1*>2*>3*>4*>5*
Tutor> 
003001c0    3e 36 2a 3e 37 2a 3e 38 2a 3e 39 3c 30 2a 3c 31 >6*>7*>8*>9<0*<1
Tutor> 
003001d0    2a 3c 32 2a 3c 33 2a 3c 34 2a 3c 35 2a 3c 36 2a *<2*<3*<4*<5*<6*
Tutor> 
003001e0    3c 37 2a 3c 38 2a 3c 39 2a 3c 30 2a 3c 31 2a 3c <7*<8*<9*<0*<1*<
Tutor> 
003001f0    32 2a 3c 33 2a 3c 34 2a 3c 35 2a 3c 36 2a 3c 37 2*<3*<4*<5*<6*<7
Tutor> 
00300200    2a 3c 38 2a 3c 39 2a 00 00 00 00 00 00 00 00 00 *<8*<9*.........
Tutor> 
00300210    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
Tutor> 
00300220    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................
Tutor> exi   
Tutor> 
Quit handler: 
killing process 2293 Leaving board #1
]0;tuser@tutor-vserver: ~/cs444/hw1tuser@tutor-vserver:~/cs444/hw1$ exit
exit

Script done on Sun 11 Oct 2020 09:59:38 PM EDT
